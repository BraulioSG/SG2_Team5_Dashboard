---
import Slide from "../../layouts/Slide.astro";
import DowntimeItemsScatter from "../../graphs/DowntimeItemsScatter.astro";
---
<style>
    #TimeScatter .toolbar select{
        width: 200px;
    }
</style>
<Slide>
    <main id="DowntimeItems" class="slide-content"> 
        <div class="toolbar">
            <input type="range" id="timescatteritems-range" value=0 min=0 max=100 step=1/>
            <button class="play-btn" id="timescatteritems-play-btn">Play</button>
            <label for="top"><strong>Top: </strong></label>
            <select id="work-station-select" name="top">
                <option>Company level</option>
                <option>WS#1@PL#1</option>
                <option>WS#2@PL#1</option>
                <option>WS#3@PL#1</option>
                <option>WS#4@PL#1</option>
                <option>WS#5@PL#1</option>
                <option>WS#6@PL#1</option>
            </select>
        </div>
        <div class="info">
            <h1>Downtime vs Total items</h1>
            <p>To identify a factor that had a direct relationship with item production, we needed to plot the item production against another factor. We decided to settle on downtime, since it would make sense that less production time impacts production itself. We generated a scatter plot comparing total items and downtime.</p>
            <div class="info-summary">
                <div class="entries" id="DowntimeSlide-info-entries">
                </div>
            </div>
        </div>
        <div class="graphics">
            <DowntimeItemsScatter width={500} height={500}/>
        </div>
    </main>
</Slide>
<script>
    sessionStorage.setItem("timescatteritems-pause", "false");

    document.querySelector("button#timescatteritems-play-btn").addEventListener("click", () => {
        const isPlaying = sessionStorage.getItem("timescatteritems-pause") === "true";
        sessionStorage.setItem("timescatteritems-pause", isPlaying ? "false" : "true");
        document.querySelector("button#timescatteritems-play-btn").innerText = isPlaying ? "Play" : "Pause";
    })
</script>
